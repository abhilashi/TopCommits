{
  "contractName": "SupportsInterface",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of standard for detect smart contract interfaces.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Contract constructor.\"},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}}},\"stateVariables\":{\"supportedInterfaces\":{\"details\":\"Mapping of supported intefraces. You must not set element 0xffffffff to true.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/utils/supports-interface.sol\":\"SupportsInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/utils/erc165.sol\":{\"keccak256\":\"0x40d99a38f582ec806109b60b52343e7b6d67541c3c1472045243e077b3e4a155\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09623177a20bb24872ff5e825281c845f4826341f5673fbed33b684ec0ff94ae\",\"dweb:/ipfs/QmNcNEFqD4xunn2t3PfqoS6ed1esQqQJ4TW6GS3535qPaF\"]},\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0xd640bfd4f7c1c88b528912ecd2446ff7fc7e8a5df195239080d6cbe53b9d136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7193870cfeb9d306f8945e92e7c382ecd20495e63863858a3d793e59ac84134f\",\"dweb:/ipfs/QmPMD4KCiKVbfNYXtA3rXWMhD68YcWnWJJFSVszajzoHKZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506101b4806100716000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806301ffc9a714610030575b600080fd5b61004a600480360381019061004591906100dc565b610060565b6040516100579190610114565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000813590506100d681610167565b92915050565b6000602082840312156100ee57600080fd5b60006100fc848285016100c7565b91505092915050565b61010e8161012f565b82525050565b60006020820190506101296000830184610105565b92915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6101708161013b565b811461017b57600080fd5b5056fea26469706673582212202fe197b74e19871852f6682ffebd77833c55becff549c2427a755aff79e581c664736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806301ffc9a714610030575b600080fd5b61004a600480360381019061004591906100dc565b610060565b6040516100579190610114565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000813590506100d681610167565b92915050565b6000602082840312156100ee57600080fd5b60006100fc848285016100c7565b91505092915050565b61010e8161012f565b82525050565b60006020820190506101296000830184610105565b92915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6101708161013b565b811461017b57600080fd5b5056fea26469706673582212202fe197b74e19871852f6682ffebd77833c55becff549c2427a755aff79e581c664736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1121:35",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "58:86:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "68:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "90:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "77:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "77:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "68:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "106:25:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "106:32:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "106:32:35"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "36:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "44:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "52:5:35",
                "type": ""
              }
            ],
            "src": "7:137:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "215:195:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "261:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "263:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "263:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "263:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "236:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "245:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "232:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "232:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "257:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "228:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "225:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "287:116:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "302:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "316:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "306:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "331:62:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "365:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "376:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "361:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "361:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "385:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "341:19:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "341:52:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "331:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "185:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "196:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "208:6:35",
                "type": ""
              }
            ],
            "src": "150:260:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "475:50:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "492:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "512:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "497:14:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:21:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "485:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "485:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "485:34:35"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "463:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "470:3:35",
                "type": ""
              }
            ],
            "src": "416:109:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "623:118:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "633:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "645:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "656:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "641:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "633:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "707:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "720:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "731:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "716:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "716:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "669:37:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "669:65:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "669:65:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "595:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "607:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "618:4:35",
                "type": ""
              }
            ],
            "src": "531:210:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "789:48:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "799:32:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "824:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "817:6:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "817:13:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "810:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "810:21:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "799:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "771:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "781:7:35",
                "type": ""
              }
            ],
            "src": "747:90:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "887:105:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "897:89:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "912:5:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "919:66:35",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "908:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:78:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "897:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "869:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "879:7:35",
                "type": ""
              }
            ],
            "src": "843:149:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:78:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1096:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1105:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1108:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1098:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1098:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1098:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1063:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1087:5:35"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "1070:16:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1070:23:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1060:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1060:34:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1053:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1053:42:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1050:2:35"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1033:5:35",
                "type": ""
              }
            ],
            "src": "998:120:35"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "161:689:17:-:0;;;406:75;;;;;;;;;;462:4;428:19;:31;448:10;428:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;161:689;;;;;;",
  "deployedSourceMap": "161:689:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;788:4;809:19;:33;829:12;809:33;;;;;;;;;;;;;;;;;;;;;;;;;;;802:40;;684:163;;;:::o;7:137:35:-;;90:6;77:20;68:29;;106:32;132:5;106:32;:::i;:::-;58:86;;;;:::o;150:260::-;;257:2;245:9;236:7;232:23;228:32;225:2;;;273:1;270;263:12;225:2;316:1;341:52;385:7;376:6;365:9;361:22;341:52;:::i;:::-;331:62;;287:116;215:195;;;;:::o;416:109::-;497:21;512:5;497:21;:::i;:::-;492:3;485:34;475:50;;:::o;531:210::-;;656:2;645:9;641:18;633:26;;669:65;731:1;720:9;716:17;707:6;669:65;:::i;:::-;623:118;;;;:::o;747:90::-;;824:5;817:13;810:21;799:32;;789:48;;;:::o;843:149::-;;919:66;912:5;908:78;897:89;;887:105;;;:::o;998:120::-;1070:23;1087:5;1070:23;:::i;:::-;1063:5;1060:34;1050:2;;1108:1;1105;1098:12;1050:2;1040:78;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\n\nimport \"./erc165.sol\";\n\n/**\n * @dev Implementation of standard for detect smart contract interfaces.\n */\ncontract SupportsInterface is\n  ERC165\n{\n\n  /**\n   * @dev Mapping of supported intefraces. You must not set element 0xffffffff to true.\n   */\n  mapping(bytes4 => bool) internal supportedInterfaces;\n\n  /**\n   * @dev Contract constructor.\n   */\n  constructor()\n  {\n    supportedInterfaces[0x01ffc9a7] = true; // ERC165\n  }\n\n  /**\n   * @dev Function to check which interfaces are suported by this contract.\n   * @param _interfaceID Id of the interface.\n   * @return True if _interfaceID is supported, false otherwise.\n   */\n  function supportsInterface(\n    bytes4 _interfaceID\n  )\n    external\n    override\n    view\n    returns (bool)\n  {\n    return supportedInterfaces[_interfaceID];\n  }\n\n}\n",
  "sourcePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/utils/supports-interface.sol",
  "ast": {
    "absolutePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/utils/supports-interface.sol",
    "exportedSymbols": {
      "ERC165": [
        2290
      ],
      "SupportsInterface": [
        2327
      ]
    },
    "id": 2328,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2292,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:17"
      },
      {
        "absolutePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/utils/erc165.sol",
        "file": "./erc165.sol",
        "id": 2293,
        "nodeType": "ImportDirective",
        "scope": 2328,
        "sourceUnit": 2291,
        "src": "56:22:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2295,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2290,
              "src": "193:6:17"
            },
            "id": 2296,
            "nodeType": "InheritanceSpecifier",
            "src": "193:6:17"
          }
        ],
        "contractDependencies": [
          2290
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2294,
          "nodeType": "StructuredDocumentation",
          "src": "80:80:17",
          "text": " @dev Implementation of standard for detect smart contract interfaces."
        },
        "fullyImplemented": true,
        "id": 2327,
        "linearizedBaseContracts": [
          2327,
          2290
        ],
        "name": "SupportsInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 2297,
              "nodeType": "StructuredDocumentation",
              "src": "205:97:17",
              "text": " @dev Mapping of supported intefraces. You must not set element 0xffffffff to true."
            },
            "id": 2301,
            "mutability": "mutable",
            "name": "supportedInterfaces",
            "nodeType": "VariableDeclaration",
            "scope": 2327,
            "src": "305:52:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 2300,
              "keyType": {
                "id": 2298,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "313:6:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "305:23:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueType": {
                "id": 2299,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "323:4:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2311,
              "nodeType": "Block",
              "src": "422:59:17",
              "statements": [
                {
                  "expression": {
                    "id": 2309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2305,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2301,
                        "src": "428:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 2307,
                      "indexExpression": {
                        "hexValue": "30783031666663396137",
                        "id": 2306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "448:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "428:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "462:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "428:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2310,
                  "nodeType": "ExpressionStatement",
                  "src": "428:38:17"
                }
              ]
            },
            "documentation": {
              "id": 2302,
              "nodeType": "StructuredDocumentation",
              "src": "362:41:17",
              "text": " @dev Contract constructor."
            },
            "id": 2312,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:2:17"
            },
            "returnParameters": {
              "id": 2304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:0:17"
            },
            "scope": 2327,
            "src": "406:75:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2289
            ],
            "body": {
              "id": 2325,
              "nodeType": "Block",
              "src": "796:51:17",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2321,
                      "name": "supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "809:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 2323,
                    "indexExpression": {
                      "id": 2322,
                      "name": "_interfaceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2315,
                      "src": "829:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "809:33:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2320,
                  "id": 2324,
                  "nodeType": "Return",
                  "src": "802:40:17"
                }
              ]
            },
            "documentation": {
              "id": 2313,
              "nodeType": "StructuredDocumentation",
              "src": "485:196:17",
              "text": " @dev Function to check which interfaces are suported by this contract.\n @param _interfaceID Id of the interface.\n @return True if _interfaceID is supported, false otherwise."
            },
            "functionSelector": "01ffc9a7",
            "id": 2326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2317,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "757:8:17"
            },
            "parameters": {
              "id": 2316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2315,
                  "mutability": "mutable",
                  "name": "_interfaceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2326,
                  "src": "716:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2314,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:29:17"
            },
            "returnParameters": {
              "id": 2320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2319,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2326,
                  "src": "788:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:6:17"
            },
            "scope": 2327,
            "src": "684:163:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2328,
        "src": "161:689:17"
      }
    ],
    "src": "32:819:17"
  },
  "legacyAST": {
    "absolutePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/utils/supports-interface.sol",
    "exportedSymbols": {
      "ERC165": [
        2290
      ],
      "SupportsInterface": [
        2327
      ]
    },
    "id": 2328,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2292,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:17"
      },
      {
        "absolutePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/utils/erc165.sol",
        "file": "./erc165.sol",
        "id": 2293,
        "nodeType": "ImportDirective",
        "scope": 2328,
        "sourceUnit": 2291,
        "src": "56:22:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2295,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2290,
              "src": "193:6:17"
            },
            "id": 2296,
            "nodeType": "InheritanceSpecifier",
            "src": "193:6:17"
          }
        ],
        "contractDependencies": [
          2290
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2294,
          "nodeType": "StructuredDocumentation",
          "src": "80:80:17",
          "text": " @dev Implementation of standard for detect smart contract interfaces."
        },
        "fullyImplemented": true,
        "id": 2327,
        "linearizedBaseContracts": [
          2327,
          2290
        ],
        "name": "SupportsInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 2297,
              "nodeType": "StructuredDocumentation",
              "src": "205:97:17",
              "text": " @dev Mapping of supported intefraces. You must not set element 0xffffffff to true."
            },
            "id": 2301,
            "mutability": "mutable",
            "name": "supportedInterfaces",
            "nodeType": "VariableDeclaration",
            "scope": 2327,
            "src": "305:52:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 2300,
              "keyType": {
                "id": 2298,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "313:6:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "305:23:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueType": {
                "id": 2299,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "323:4:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2311,
              "nodeType": "Block",
              "src": "422:59:17",
              "statements": [
                {
                  "expression": {
                    "id": 2309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2305,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2301,
                        "src": "428:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 2307,
                      "indexExpression": {
                        "hexValue": "30783031666663396137",
                        "id": 2306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "448:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "428:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "462:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "428:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2310,
                  "nodeType": "ExpressionStatement",
                  "src": "428:38:17"
                }
              ]
            },
            "documentation": {
              "id": 2302,
              "nodeType": "StructuredDocumentation",
              "src": "362:41:17",
              "text": " @dev Contract constructor."
            },
            "id": 2312,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:2:17"
            },
            "returnParameters": {
              "id": 2304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:0:17"
            },
            "scope": 2327,
            "src": "406:75:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2289
            ],
            "body": {
              "id": 2325,
              "nodeType": "Block",
              "src": "796:51:17",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2321,
                      "name": "supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "809:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 2323,
                    "indexExpression": {
                      "id": 2322,
                      "name": "_interfaceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2315,
                      "src": "829:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "809:33:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2320,
                  "id": 2324,
                  "nodeType": "Return",
                  "src": "802:40:17"
                }
              ]
            },
            "documentation": {
              "id": 2313,
              "nodeType": "StructuredDocumentation",
              "src": "485:196:17",
              "text": " @dev Function to check which interfaces are suported by this contract.\n @param _interfaceID Id of the interface.\n @return True if _interfaceID is supported, false otherwise."
            },
            "functionSelector": "01ffc9a7",
            "id": 2326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2317,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "757:8:17"
            },
            "parameters": {
              "id": 2316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2315,
                  "mutability": "mutable",
                  "name": "_interfaceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2326,
                  "src": "716:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2314,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:29:17"
            },
            "returnParameters": {
              "id": 2320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2319,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2326,
                  "src": "788:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:6:17"
            },
            "scope": 2327,
            "src": "684:163:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2328,
        "src": "161:689:17"
      }
    ],
    "src": "32:819:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-21T23:26:13.176Z",
  "devdoc": {
    "details": "Implementation of standard for detect smart contract interfaces.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Contract constructor."
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      }
    },
    "stateVariables": {
      "supportedInterfaces": {
        "details": "Mapping of supported intefraces. You must not set element 0xffffffff to true."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}