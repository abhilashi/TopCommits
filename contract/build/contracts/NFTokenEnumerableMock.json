{
  "contractName": "NFTokenEnumerableMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NOT_CURRENT_OWNER",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CANNOT_TRANSFER_TO_ZERO_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NOT_CURRENT_OWNER\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an example contract implementation of NFToken with enumerable extension.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"burn(uint256)\":{\"details\":\"Removes a NFT from owner.\",\"params\":{\"_tokenId\":\"Which NFT we want to remove.\"}},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"mint(address,uint256)\":{\"details\":\"Mints a new NFT.\",\"params\":{\"_to\":\"The address that will own the minted NFT.\",\"_tokenId\":\"of the NFT to be minted by the msg.sender.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"tokenByIndex(uint256)\":{\"details\":\"Returns NFT ID by its index.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"returns the n-th NFT ID from a list of owner's tokens.\",\"params\":{\"_index\":\"Index number representing n-th token in owner's list of tokens.\",\"_owner\":\"Token owner's address.\"},\"returns\":{\"_0\":\"Token id.\"}},\"totalSupply()\":{\"details\":\"Returns the count of all existing NFTokens.\",\"returns\":{\"_0\":\"Total supply of NFTs.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/mocks/nf-token-enumerable-mock.sol\":\"NFTokenEnumerableMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/mocks/nf-token-enumerable-mock.sol\":{\"keccak256\":\"0xb5e4552e67b0d81ebbdccd4915747825703f5fe93f40ad16aff51b046cd312ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5a2b66acf22b0a33b568fb6626296c2f7dacd2172063a7f54241099396c20d9\",\"dweb:/ipfs/QmRXKC61qNoRgYp7g1HGrB5zsDT8iXB8g2GSaDQ3iA6mpR\"]},\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/ownership/ownable.sol\":{\"keccak256\":\"0x57ef5ed3dc0a47f8c20beb35f6c8c904d25c14e18623e0c172a52845cadb7d52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f1d0ec7430c1e98bd9ffe92906c1c2f17585abb5d4e07329cc7a05a3fc8c6a\",\"dweb:/ipfs/QmP4LRRjc7azUMakSvE6gDkRKb6b5BWGp6Lug3WsESJcuM\"]},\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/tokens/erc721-enumerable.sol\":{\"keccak256\":\"0x4bf5b91ae120df311ad5dfc01361b11d453b2fd60763eb340e918f5203db63cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc53a0631c1cd7517fc25851272b42466caff12c0539eec8cdcdf6cf27064d58\",\"dweb:/ipfs/QmRovUaBo6TwvbXquPfwbJDvcbiEnBWCwZXkWtkdhxhtE7\"]},\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0x4cdbea942c336fd8d00127cbe97827242a1feb2c690007dd5d615e73d1edabff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a5c1b58e5e7f144030d9e4bf4577e0739eb85b095f2d62a9511a86f9310bc8\",\"dweb:/ipfs/QmcJZaYpTCCCpdgceE8bsUHdExDwKJWRdKhF9rm1U3n3Te\"]},\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/tokens/erc721.sol\":{\"keccak256\":\"0x64681d72cd342b7ae5eab3b15ad10d629427e122f427468ccdabc3258d111bf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8af9da2c63b549534772bff1f80ecd75e52b872e6eef714f243965accfc92c44\",\"dweb:/ipfs/Qmavx3L2tpdbdMVExTXmU2SDBqo53S6DSGCK2ErMKJd8Dz\"]},\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/tokens/nf-token-enumerable.sol\":{\"keccak256\":\"0xe63e91eb93e11fff57bb06289f305f475c7a274b3a488c262463976100f2284b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10b21a07d1746c6f827b40e4e24a047c913576d25a4ca672f1f24f01bb1d7396\",\"dweb:/ipfs/QmUZZV4NWavGJzt5mtEHryYAsP3UzaS4dpKoZ6duC1epqZ\"]},\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0xc985a8be84b8a7fc7978b233b25732ba4579320b681cc08d09b55dc477b70ddf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46c8e1e5a6222be4b97da26749213277dbb3df31bb15839abd7f4aaacda41774\",\"dweb:/ipfs/QmPwRYqrFpA3aYQy4VbGAKi4aLsuYgY4v6mTHPDU1g2GsT\"]},\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/utils/address-utils.sol\":{\"keccak256\":\"0xd5cf8ac87ee4ebebff4e7d6f1b2bf2416016f03151dd47057e40196213cc747b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e0608cf74cec01d15df48a321b425139fc5bdec9d5a178885b4f00ca33df2c5\",\"dweb:/ipfs/QmSiobwuQdewdEzMvLp2XZp4uG5wtsM4m29j1zHWc4QJuU\"]},\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/utils/erc165.sol\":{\"keccak256\":\"0x40d99a38f582ec806109b60b52343e7b6d67541c3c1472045243e077b3e4a155\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09623177a20bb24872ff5e825281c845f4826341f5673fbed33b684ec0ff94ae\",\"dweb:/ipfs/QmNcNEFqD4xunn2t3PfqoS6ed1esQqQJ4TW6GS3535qPaF\"]},\"/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0xd640bfd4f7c1c88b528912ecd2446ff7fc7e8a5df195239080d6cbe53b9d136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7193870cfeb9d306f8945e92e7c382ecd20495e63863858a3d793e59ac84134f\",\"dweb:/ipfs/QmPMD4KCiKVbfNYXtA3rXWMhD68YcWnWJJFSVszajzoHKZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000806380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550600160008063780e9d6360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612f92806101546000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80634f6ccce7116100ad578063a22cb46511610071578063a22cb4651461032c578063b88d4fde14610348578063e985e9c514610364578063f2fde38b14610394578063f3fe3bc3146103b057610121565b80634f6ccce7146102605780636352211e1461029057806370a08231146102c0578063860d248a146102f05780638da5cb5b1461030e57610121565b806323b872dd116100f457806323b872dd146101c05780632f745c59146101dc57806340c10f191461020c57806342842e0e1461022857806342966c681461024457610121565b806301ffc9a714610126578063081812fc14610156578063095ea7b31461018657806318160ddd146101a2575b600080fd5b610140600480360381019061013b9190612bd4565b6103ce565b60405161014d9190612d55565b60405180910390f35b610170600480360381019061016b9190612c26565b610435565b60405161017d9190612cee565b60405180910390f35b6101a0600480360381019061019b9190612b98565b610550565b005b6101aa610933565b6040516101b79190612d92565b60405180910390f35b6101da60048036038101906101d59190612a8d565b610940565b005b6101f660048036038101906101f19190612b98565b610d92565b6040516102039190612d92565b60405180910390f35b61022660048036038101906102219190612b98565b610edb565b005b610242600480360381019061023d9190612a8d565b610fb2565b005b61025e60048036038101906102599190612c26565b610fd2565b005b61027a60048036038101906102759190612c26565b6110a7565b6040516102879190612d92565b60405180910390f35b6102aa60048036038101906102a59190612c26565b611175565b6040516102b79190612cee565b60405180910390f35b6102da60048036038101906102d59190612a28565b61125b565b6040516102e79190612d92565b60405180910390f35b6102f8611315565b6040516103059190612d70565b60405180910390f35b61031661134e565b6040516103239190612cee565b60405180910390f35b61034660048036038101906103419190612b5c565b611374565b005b610362600480360381019061035d9190612adc565b611471565b005b61037e60048036038101906103799190612a51565b6114c8565b60405161038b9190612d55565b60405180910390f35b6103ae60048036038101906103a99190612a28565b61155c565b005b6103b861178e565b6040516103c59190612d70565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050a9190612d70565b60405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806106495750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f3030333030330000000000000000000000000000000000000000000000000000815250906106c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b79190612d70565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061079d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107949190612d70565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303800000000000000000000000000000000000000000000000000008152509061087d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108749190612d70565b60405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000600580549050905090565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610a1157503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610aa25750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090610b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b109190612d70565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610bf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bed9190612d70565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090610cd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccc9190612d70565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610d7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d759190612d70565b60405180910390fd5b50610d8986866117c7565b50505050505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905082106040518060400160405280600681526020017f303035303037000000000000000000000000000000000000000000000000000081525090610e50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e479190612d70565b60405180910390fd5b50600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610ec8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525090610fa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9a9190612d70565b60405180910390fd5b50610fae828261187c565b5050565b610fcd838383604051806020016040528060008152506118dc565b505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f30313830303100000000000000000000000000000000000000000000000000008152509061109a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110919190612d70565b60405180910390fd5b506110a481611eaa565b50565b600060058054905082106040518060400160405280600681526020017f303035303037000000000000000000000000000000000000000000000000000081525090611128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111f9190612d70565b60405180910390fd5b5060058281548110611163577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124c9190612d70565b60405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090611304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fb9190612d70565b60405180910390fd5b5061130e82611ff8565b9050919050565b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114659190612d55565b60405180910390a35050565b6114c185858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506118dc565b5050505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525090611624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161b9190612d70565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3031383030320000000000000000000000000000000000000000000000000000815250906116cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116c49190612d70565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061180882612044565b611812818361207d565b61181c83836123b6565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61188682826125b3565b600581908060018154018082558091505060019003906000526020600020016000909190919091505560016005805490506118c19190612de5565b60066000838152602001908152602001600020819055505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806119ad57503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80611a3e5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090611ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aac9190612d70565b60405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611b92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b899190612d70565b60405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611c71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c689190612d70565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090611d1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d119190612d70565b60405180910390fd5b50611d2587876117c7565b611d448773ffffffffffffffffffffffffffffffffffffffff166127a1565b15611ea05760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b8152600401611d8a9493929190612d09565b602060405180830381600087803b158015611da457600080fd5b505af1158015611db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ddc9190612bfd565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f303033303035000000000000000000000000000000000000000000000000000081525090611e9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e949190612d70565b60405180910390fd5b50505b5050505050505050565b611eb3816127ec565b60006006600083815260200190815260200160002054905060006001600580549050611edf9190612de5565b9050600060058281548110611f1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490508060058481548110611f65577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001819055506005805480611fab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590558260066000838152602001908152602001600020819055506000600660008681526020019081526020016000208190555050505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b6002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090612156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214d9190612d70565b60405180910390fd5b506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560006008600083815260200190815260200160002054905060006001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506121f69190612de5565b9050818114612325576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612278577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106122fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550826008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548061239a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090612490576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124879190612d70565b60405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506125989190612de5565b60086000838152602001908152602001600020819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303100000000000000000000000000000000000000000000000000008152509061265b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126529190612d70565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090612736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272d9190612d70565b60405180910390fd5b5061274182826123b6565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156127e35750808214155b92505050919050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906128c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128bf9190612d70565b60405180910390fd5b5060006001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061290a83612044565b612914818461207d565b82600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008135905061298481612f00565b92915050565b60008135905061299981612f17565b92915050565b6000813590506129ae81612f2e565b92915050565b6000815190506129c381612f2e565b92915050565b60008083601f8401126129db57600080fd5b8235905067ffffffffffffffff8111156129f457600080fd5b602083019150836001820283011115612a0c57600080fd5b9250929050565b600081359050612a2281612f45565b92915050565b600060208284031215612a3a57600080fd5b6000612a4884828501612975565b91505092915050565b60008060408385031215612a6457600080fd5b6000612a7285828601612975565b9250506020612a8385828601612975565b9150509250929050565b600080600060608486031215612aa257600080fd5b6000612ab086828701612975565b9350506020612ac186828701612975565b9250506040612ad286828701612a13565b9150509250925092565b600080600080600060808688031215612af457600080fd5b6000612b0288828901612975565b9550506020612b1388828901612975565b9450506040612b2488828901612a13565b935050606086013567ffffffffffffffff811115612b4157600080fd5b612b4d888289016129c9565b92509250509295509295909350565b60008060408385031215612b6f57600080fd5b6000612b7d85828601612975565b9250506020612b8e8582860161298a565b9150509250929050565b60008060408385031215612bab57600080fd5b6000612bb985828601612975565b9250506020612bca85828601612a13565b9150509250929050565b600060208284031215612be657600080fd5b6000612bf48482850161299f565b91505092915050565b600060208284031215612c0f57600080fd5b6000612c1d848285016129b4565b91505092915050565b600060208284031215612c3857600080fd5b6000612c4684828501612a13565b91505092915050565b612c5881612e19565b82525050565b612c6781612e2b565b82525050565b6000612c7882612dad565b612c828185612dc3565b9350612c92818560208601612e8d565b612c9b81612eef565b840191505092915050565b6000612cb182612db8565b612cbb8185612dd4565b9350612ccb818560208601612e8d565b612cd481612eef565b840191505092915050565b612ce881612e83565b82525050565b6000602082019050612d036000830184612c4f565b92915050565b6000608082019050612d1e6000830187612c4f565b612d2b6020830186612c4f565b612d386040830185612cdf565b8181036060830152612d4a8184612c6d565b905095945050505050565b6000602082019050612d6a6000830184612c5e565b92915050565b60006020820190508181036000830152612d8a8184612ca6565b905092915050565b6000602082019050612da76000830184612cdf565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612df082612e83565b9150612dfb83612e83565b925082821015612e0e57612e0d612ec0565b5b828203905092915050565b6000612e2482612e63565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015612eab578082015181840152602081019050612e90565b83811115612eba576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b612f0981612e19565b8114612f1457600080fd5b50565b612f2081612e2b565b8114612f2b57600080fd5b50565b612f3781612e37565b8114612f4257600080fd5b50565b612f4e81612e83565b8114612f5957600080fd5b5056fea26469706673582212204657554a5c81552778ea5ed69d718368c58b4b9b612383f8a941d0da79af348564736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9979:35",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:35"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:35",
                "type": ""
              }
            ],
            "src": "7:139:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "201:84:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "211:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "233:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "220:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "220:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "211:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "273:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "249:23:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:30:35"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "179:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "187:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "195:5:35",
                "type": ""
              }
            ],
            "src": "152:133:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "342:86:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "352:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "374:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "361:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "361:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "352:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "416:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "390:25:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:32:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:32:35"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "320:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "328:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "336:5:35",
                "type": ""
              }
            ],
            "src": "291:137:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "496:79:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "506:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "521:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "515:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "515:13:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "506:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "563:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "537:25:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:32:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "537:32:35"
                }
              ]
            },
            "name": "abi_decode_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "474:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "482:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "490:5:35",
                "type": ""
              }
            ],
            "src": "434:141:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "668:277:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "717:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "726:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "729:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "719:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "719:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "719:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "696:6:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "704:4:35",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "692:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "692:17:35"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "711:3:35"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:27:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "681:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:35:35"
                  },
                  "nodeType": "YulIf",
                  "src": "678:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "742:30:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "765:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "752:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "742:6:35"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "824:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "827:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "817:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "787:6:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "795:18:35",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "784:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:30:35"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "840:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "856:6:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "864:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "852:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:17:35"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "840:8:35"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "923:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "932:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "935:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "925:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "925:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "925:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "888:8:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "902:6:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "910:4:35",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "898:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "898:17:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "884:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "884:32:35"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "918:3:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "881:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:41:35"
                  },
                  "nodeType": "YulIf",
                  "src": "878:2:35"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "635:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "643:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "651:8:35",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "661:6:35",
                "type": ""
              }
            ],
            "src": "594:351:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1003:87:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1013:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1035:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1022:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1022:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1013:5:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1078:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1051:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1051:33:35"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "981:6:35",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "989:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "997:5:35",
                "type": ""
              }
            ],
            "src": "951:139:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1162:196:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1208:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1217:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1220:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1210:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1210:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1210:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1183:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1192:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1179:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1179:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1204:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1175:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1175:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1172:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1234:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1249:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1263:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1253:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1278:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1313:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1324:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1309:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1309:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1333:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1288:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1278:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1132:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1143:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1155:6:35",
                "type": ""
              }
            ],
            "src": "1096:262:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1447:324:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1493:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1502:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1505:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1495:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1495:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1495:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1468:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1477:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1464:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1464:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1489:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1460:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1460:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1457:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1519:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1534:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1548:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1538:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1563:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1598:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1609:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1594:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1594:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1618:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1573:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1573:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1563:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1646:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1661:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1675:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1665:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1691:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1726:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1737:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1722:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1722:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1746:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1701:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1701:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1691:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1409:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1420:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1432:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1440:6:35",
                "type": ""
              }
            ],
            "src": "1364:407:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1877:452:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1923:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1932:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1935:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1925:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1925:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1925:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1898:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1907:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1894:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1894:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1919:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1890:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1890:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1887:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1949:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1964:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1978:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1968:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1993:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2028:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2039:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2024:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2024:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2048:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2003:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1993:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2076:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2091:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2105:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2095:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2121:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2156:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2167:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2152:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2152:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2176:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2131:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2131:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2121:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2204:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2219:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2233:2:35",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2223:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2249:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2284:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2295:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2280:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2280:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2304:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2259:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2259:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2249:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1831:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1842:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1854:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1862:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1870:6:35",
                "type": ""
              }
            ],
            "src": "1777:552:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2471:693:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2518:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2527:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2530:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2520:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2520:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2520:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2492:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2501:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2488:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2488:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2513:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2484:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:33:35"
                  },
                  "nodeType": "YulIf",
                  "src": "2481:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2544:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2559:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2573:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2563:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2588:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2623:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2634:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2619:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2619:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2643:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2598:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2598:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2588:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2671:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2686:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2700:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2690:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2716:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2751:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2762:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2747:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2747:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2771:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2726:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2726:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2716:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2799:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2814:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2828:2:35",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2818:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2844:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2879:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2890:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2875:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2875:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2899:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2854:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2854:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2844:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2927:230:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2942:46:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2973:9:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2984:2:35",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2969:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2969:18:35"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2956:12:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2956:32:35"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2946:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3035:16:35",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3044:1:35",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3047:1:35",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3037:6:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3037:12:35"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3037:12:35"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3007:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3015:18:35",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3004:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3004:30:35"
                      },
                      "nodeType": "YulIf",
                      "src": "3001:2:35"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3065:82:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3119:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3130:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3115:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3115:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3139:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3083:31:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3083:64:35"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3065:6:35"
                        },
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3073:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2409:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2420:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2432:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2440:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2448:6:35",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2456:6:35",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2464:6:35",
                "type": ""
              }
            ],
            "src": "2335:829:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3250:321:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3296:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3305:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3308:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3298:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3298:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3298:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3271:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3280:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3267:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3267:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3292:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3263:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3263:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3260:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3322:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3337:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3351:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3341:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3366:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3401:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3412:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3397:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3397:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3421:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3376:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3366:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3449:115:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3464:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3478:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3468:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3494:60:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3526:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3537:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3522:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3522:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3546:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3504:17:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3504:50:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3494:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3212:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3223:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3235:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3243:6:35",
                "type": ""
              }
            ],
            "src": "3170:401:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3660:324:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3706:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3715:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3718:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3708:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3708:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3708:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3681:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3690:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3677:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3677:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3702:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3673:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3673:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3670:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3732:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3747:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3761:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3751:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3776:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3811:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3822:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3807:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3807:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3831:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3786:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3786:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3776:6:35"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3859:118:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3874:16:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3888:2:35",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3878:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3904:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3939:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3950:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3935:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3935:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3959:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3914:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3914:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3904:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3622:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3633:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3645:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3653:6:35",
                "type": ""
              }
            ],
            "src": "3577:407:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4055:195:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4101:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4110:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4113:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4103:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4103:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4103:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4076:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4085:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4072:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4072:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4097:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4068:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4068:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "4065:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4127:116:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4142:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4156:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4146:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4171:62:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4205:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4216:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4201:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4201:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4225:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "4181:19:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4181:52:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4171:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4025:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4036:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4048:6:35",
                "type": ""
              }
            ],
            "src": "3990:260:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4332:206:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4378:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4387:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4390:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4380:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4380:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4380:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4353:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4362:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4349:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4349:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4374:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4345:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4345:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "4342:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4404:127:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4419:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4433:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4423:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4448:73:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4493:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4504:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4489:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4489:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4513:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4458:30:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4458:63:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4448:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4302:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4313:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4325:6:35",
                "type": ""
              }
            ],
            "src": "4256:282:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4610:196:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4656:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4665:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4668:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4658:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4658:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4658:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4631:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4640:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4627:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4627:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4652:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4623:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4623:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "4620:2:35"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4682:117:35",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4697:15:35",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4711:1:35",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4701:6:35",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4726:63:35",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4761:9:35"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4772:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4757:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4757:22:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4781:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4736:20:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4736:53:35"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4726:6:35"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4580:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4591:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4603:6:35",
                "type": ""
              }
            ],
            "src": "4544:262:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4877:53:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4894:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4917:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4899:17:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4899:24:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4887:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4887:37:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4887:37:35"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4865:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4872:3:35",
                "type": ""
              }
            ],
            "src": "4812:118:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4995:50:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5012:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5032:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5017:14:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5017:21:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5005:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5005:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5005:34:35"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4983:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4990:3:35",
                "type": ""
              }
            ],
            "src": "4936:109:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5141:270:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5151:52:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5197:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5165:31:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5165:38:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5155:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5212:77:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5277:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5282:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5219:57:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5219:70:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5212:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5324:5:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5331:4:35",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5320:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5320:16:35"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5338:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5343:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5298:21:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5298:52:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5298:52:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5359:46:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5370:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5397:6:35"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5375:21:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5375:29:35"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5366:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5366:39:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5359:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5122:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5129:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5137:3:35",
                "type": ""
              }
            ],
            "src": "5051:360:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5509:272:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5519:53:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5566:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5533:32:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5533:39:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5523:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5581:78:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5647:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5652:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5588:58:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5588:71:35"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5581:3:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5694:5:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5701:4:35",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5690:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5690:16:35"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5708:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5713:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5668:21:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5668:52:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5668:52:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5729:46:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5740:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5767:6:35"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5745:21:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5745:29:35"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5736:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5736:39:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5729:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5490:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5497:3:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5505:3:35",
                "type": ""
              }
            ],
            "src": "5417:364:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5852:53:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5869:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5892:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5874:17:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5874:24:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5862:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5862:37:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5862:37:35"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5840:5:35",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5847:3:35",
                "type": ""
              }
            ],
            "src": "5787:118:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6009:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6019:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6031:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6042:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6027:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6019:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6099:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6112:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6123:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6108:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6108:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6055:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6055:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6055:71:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5981:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5993:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6004:4:35",
                "type": ""
              }
            ],
            "src": "5911:222:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6339:440:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6349:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6361:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6372:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6357:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6357:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6349:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6430:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6443:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6454:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6439:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6439:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6386:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6386:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6386:71:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6511:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6524:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6535:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6520:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6520:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6467:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6467:72:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6467:72:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6593:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6606:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6617:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6602:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6602:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6549:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6549:72:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6549:72:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6642:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6653:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6638:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6638:18:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6662:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6668:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6658:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6658:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6631:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6631:48:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6631:48:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6688:84:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6758:6:35"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6767:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6696:61:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6696:76:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6688:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6287:9:35",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6299:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6307:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6315:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6323:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6334:4:35",
                "type": ""
              }
            ],
            "src": "6139:640:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6877:118:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6887:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6899:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6910:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6895:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6895:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6887:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6961:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6974:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6985:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6970:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6970:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6923:37:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6923:65:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6923:65:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6849:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6861:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6872:4:35",
                "type": ""
              }
            ],
            "src": "6785:210:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7119:195:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7129:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7141:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7152:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7137:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7137:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7129:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7176:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7187:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7172:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7172:17:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7195:4:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7201:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7191:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7191:20:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7165:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7165:47:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7165:47:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7221:86:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7293:6:35"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7302:4:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7229:63:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7229:78:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7221:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7091:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7103:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7114:4:35",
                "type": ""
              }
            ],
            "src": "7001:313:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7418:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7428:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7440:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7451:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7436:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7436:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7428:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7508:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7521:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7532:1:35",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7517:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7517:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7464:43:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7464:71:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7464:71:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7390:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7402:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7413:4:35",
                "type": ""
              }
            ],
            "src": "7320:222:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7606:40:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7617:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7633:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7627:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7627:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7617:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7589:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7599:6:35",
                "type": ""
              }
            ],
            "src": "7548:98:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7711:40:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7722:22:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7738:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7732:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7732:12:35"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7722:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7694:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7704:6:35",
                "type": ""
              }
            ],
            "src": "7652:99:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7852:73:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7869:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7874:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7862:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7862:19:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7862:19:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7890:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7909:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7914:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7905:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7905:14:35"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7890:11:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7824:3:35",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7829:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7840:11:35",
                "type": ""
              }
            ],
            "src": "7757:168:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8027:73:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8044:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8049:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8037:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8037:19:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8037:19:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8065:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8084:3:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8089:4:35",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8080:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8080:14:35"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8065:11:35"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7999:3:35",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8004:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8015:11:35",
                "type": ""
              }
            ],
            "src": "7931:169:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8151:146:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8161:25:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8184:1:35"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8166:17:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8166:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8161:1:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8195:25:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8218:1:35"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8200:17:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8200:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8195:1:35"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8242:22:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8244:16:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8244:18:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8244:18:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8236:1:35"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8239:1:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8233:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8233:8:35"
                  },
                  "nodeType": "YulIf",
                  "src": "8230:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8274:17:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8286:1:35"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8289:1:35"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8282:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8282:9:35"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8274:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8137:1:35",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8140:1:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8146:4:35",
                "type": ""
              }
            ],
            "src": "8106:191:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8348:51:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8358:35:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8387:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8369:17:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8369:24:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8358:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8330:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8340:7:35",
                "type": ""
              }
            ],
            "src": "8303:96:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8447:48:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8457:32:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8482:5:35"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8475:6:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8475:13:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8468:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8468:21:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8457:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8429:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8439:7:35",
                "type": ""
              }
            ],
            "src": "8405:90:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8545:105:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8555:89:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8570:5:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8577:66:35",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8566:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8566:78:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8555:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8527:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8537:7:35",
                "type": ""
              }
            ],
            "src": "8501:149:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8701:81:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8711:65:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8726:5:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8733:42:35",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8722:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8722:54:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8711:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8683:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8693:7:35",
                "type": ""
              }
            ],
            "src": "8656:126:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8833:32:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8843:16:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8854:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8843:7:35"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8815:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8825:7:35",
                "type": ""
              }
            ],
            "src": "8788:77:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8920:258:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8930:10:35",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8939:1:35",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8934:1:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8999:63:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9024:3:35"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "9029:1:35"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9020:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9020:11:35"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "9043:3:35"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9048:1:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9039:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9039:11:35"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9033:5:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9033:18:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9013:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9013:39:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9013:39:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8960:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8963:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8957:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8957:13:35"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8971:19:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8973:15:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8982:1:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8985:2:35",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8978:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8978:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8973:1:35"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8953:3:35",
                    "statements": []
                  },
                  "src": "8949:113:35"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9096:76:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9146:3:35"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9151:6:35"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9142:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9142:16:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9160:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9135:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9135:27:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9135:27:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9077:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9080:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9074:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9074:13:35"
                  },
                  "nodeType": "YulIf",
                  "src": "9071:2:35"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8902:3:35",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8907:3:35",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8912:6:35",
                "type": ""
              }
            ],
            "src": "8871:307:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9212:152:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9229:1:35",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9232:77:35",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9222:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9222:88:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9222:88:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9326:1:35",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9329:4:35",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9319:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9319:15:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9319:15:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9350:1:35",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9353:4:35",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9343:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9343:15:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9343:15:35"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9184:180:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9418:54:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9428:38:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9446:5:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9453:2:35",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9442:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9442:14:35"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9462:2:35",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9458:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9458:7:35"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9438:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9438:28:35"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "9428:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9401:5:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "9411:6:35",
                "type": ""
              }
            ],
            "src": "9370:102:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9521:79:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9578:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9587:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9590:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9580:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9580:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9580:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9544:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9569:5:35"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "9551:17:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9551:24:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9541:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9541:35:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9534:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9534:43:35"
                  },
                  "nodeType": "YulIf",
                  "src": "9531:2:35"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9514:5:35",
                "type": ""
              }
            ],
            "src": "9478:122:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9646:76:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9700:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9709:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9712:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9702:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9702:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9702:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9669:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9691:5:35"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "9676:14:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9676:21:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9666:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9666:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9659:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9659:40:35"
                  },
                  "nodeType": "YulIf",
                  "src": "9656:2:35"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9639:5:35",
                "type": ""
              }
            ],
            "src": "9606:116:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9770:78:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9826:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9835:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9838:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9828:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9828:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9828:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9793:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9817:5:35"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "9800:16:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9800:23:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9790:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9790:34:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9783:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9783:42:35"
                  },
                  "nodeType": "YulIf",
                  "src": "9780:2:35"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9763:5:35",
                "type": ""
              }
            ],
            "src": "9728:120:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9897:79:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9954:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9963:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9966:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9956:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9956:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9956:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9920:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9945:5:35"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "9927:17:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9927:24:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9917:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9917:35:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9910:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9910:43:35"
                  },
                  "nodeType": "YulIf",
                  "src": "9907:2:35"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9890:5:35",
                "type": ""
              }
            ],
            "src": "9854:122:35"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "246:560:3:-:0;;;;;;;;;;;;;462:4:17;428:19;:31;448:10;428:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2809:4:14;2775:19;:31;2795:10;2775:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1040:4:12;1006:19;:31;1026:10;1006:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1034:10:7;1026:5;;:18;;;;;;;;;;;;;;;;;;246:560:3;;;;;;",
  "deployedSourceMap": "246:560:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:163:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7907:173:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5768:338;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1174:113:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5018:338:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1839:240:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;477:123:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4284:170:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;702:101:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1421:189:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7473:198:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7017:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;472:65:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;587:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6508:223:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3686:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8341:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1379:229:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;417:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;684:163:17;788:4;809:19;:33;829:12;809:33;;;;;;;;;;;;;;;;;;;;;;;;;;;802:40;;684:163;;;:::o;7907:173:14:-;8029:7;8006:8;2675:1;2644:33;;:9;:19;2654:8;2644:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2679:13;;;;;;;;;;;;;;;;;2636:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8053:12:::1;:22;8066:8;8053:22;;;;;;;;;;;;;;;;;;;;;8046:29;;7907:173:::0;;;;:::o;5768:338::-;5875:8;1862:18;1883:9;:19;1893:8;1883:19;;;;;;;;;;;;;;;;;;;;;1862:40;;1937:10;1923:24;;:10;:24;;;:68;;;;1951:16;:28;1968:10;1951:28;;;;;;;;;;;;;;;:40;1980:10;1951:40;;;;;;;;;;;;;;;;;;;;;;;;;1923:68;1999:21;;;;;;;;;;;;;;;;;1908:118;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5902:8:::1;2675:1;2644:33;;:9;:19;2654:8;2644:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2679:13;;;;;;;;;;;;;;;;::::0;2636:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5920:18:::2;5941:9;:19;5951:8;5941:19;;;;;;;;;;;;;;;;;;;;;5920:40;;5987:10;5974:23;;:9;:23;;;;5999:8;;;;;;;;;;;;;;;;::::0;5966:42:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6040:9;6015:12;:22;6028:8;6015:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;6092:8;6081:9;6060:41;;6069:10;6060:41;;;;;;;;;;;;2699:1;2032::::1;5768:338:::0;;;;:::o;1174:113:12:-;1245:7;1269:6;:13;;;;1262:20;;1174:113;:::o;5018:338:14:-;5144:8;2226:18;2247:9;:19;2257:8;2247:19;;;;;;;;;;;;;;;;;;;;;2226:40;;2301:10;2287:24;;:10;:24;;;:70;;;;2347:10;2321:36;;:12;:22;2334:8;2321:22;;;;;;;;;;;;;;;;;;;;;:36;;;2287:70;:120;;;;2367:16;:28;2384:10;2367:28;;;;;;;;;;;;;;;:40;2396:10;2367:40;;;;;;;;;;;;;;;;;;;;;;;;;2287:120;2415:30;;;;;;;;;;;;;;;;;2272:179;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5171:8:::1;2675:1;2644:33;;:9;:19;2654:8;2644:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2679:13;;;;;;;;;;;;;;;;::::0;2636:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5189:18:::2;5210:9;:19;5220:8;5210:19;;;;;;;;;;;;;;;;;;;;;5189:40;;5257:5;5243:19;;:10;:19;;;5264:9;;;;;;;;;;;;;;;;::::0;5235:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5303:1;5288:17;;:3;:17;;;;5307:12;;;;;;;;;;;;;;;;::::0;5280:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5327:24;5337:3;5342:8;5327:9;:24::i;:::-;2699:1;2457::::1;5018:338:::0;;;;;:::o;1839:240:12:-;1960:7;1994:10;:18;2005:6;1994:18;;;;;;;;;;;;;;;:25;;;;1985:6;:34;2021:13;;;;;;;;;;;;;;;;;1977:58;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2048:10;:18;2059:6;2048:18;;;;;;;;;;;;;;;2067:6;2048:26;;;;;;;;;;;;;;;;;;;;;;;;2041:33;;1839:240;;;;:::o;477:123:3:-;1180:5:7;;;;;;;;;;;1166:19;;:10;:19;;;1187:17;;;;;;;;;;;;;;;;;1158:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;569:26:3::1;581:3;586:8;569:11;:26::i;:::-;477:123:::0;;:::o;4284:170:14:-;4406:43;4424:5;4431:3;4436:8;4406:43;;;;;;;;;;;;:17;:43::i;:::-;4284:170;;;:::o;702:101:3:-;1180:5:7;;;;;;;;;;;1166:19;;:10;:19;;;1187:17;;;;;;;;;;;;;;;;;1158:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;777:21:3::1;789:8;777:11;:21::i;:::-;702:101:::0;:::o;1421:189:12:-;1515:7;1549:6;:13;;;;1540:6;:22;1564:13;;;;;;;;;;;;;;;;;1532:46;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1591:6;1598;1591:14;;;;;;;;;;;;;;;;;;;;;;;;1584:21;;1421:189;;;:::o;7473:198:14:-;7564:14;7597:9;:19;7607:8;7597:19;;;;;;;;;;;;;;;;;;;;;7588:28;;7648:1;7630:20;;:6;:20;;;;7652:13;;;;;;;;;;;;;;;;;7622:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7473:198;;;:::o;7017:194::-;7108:7;7151:1;7133:20;;:6;:20;;;;7155:12;;;;;;;;;;;;;;;;;7125:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7181:25;7199:6;7181:17;:25::i;:::-;7174:32;;7017:194;;;:::o;472:65:7:-;;;;;;;;;;;;;;;;;;;:::o;587:20::-;;;;;;;;;;;;;:::o;6508:223:14:-;6658:9;6616:16;:28;6633:10;6616:28;;;;;;;;;;;;;;;:39;6645:9;6616:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;6705:9;6678:48;;6693:10;6678:48;;;6716:9;6678:48;;;;;;:::i;:::-;;;;;;;;6508:223;;:::o;3686:199::-;3834:46;3852:5;3859:3;3864:8;3874:5;;3834:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;3686:199;;;;;:::o;8341:182::-;8462:4;8483:16;:24;8500:6;8483:24;;;;;;;;;;;;;;;:35;8508:9;8483:35;;;;;;;;;;;;;;;;;;;;;;;;;8476:42;;8341:182;;;;:::o;1379:229:7:-;1180:5;;;;;;;;;;;1166:19;;:10;:19;;;1187:17;;;;;;;;;;;;;;;;;1158:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1495:1:::1;1474:23;;:9;:23;;;;1499:31;;;;;;;;;;;;;;;;::::0;1466:65:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1570:9;1542:38;;1563:5;;;;;;;;;;;1542:38;;;;;;;;;;;;1594:9;1586:5;;:17;;;;;;;;;;;;;;;;;;1379:229:::0;:::o;417:51::-;;;;;;;;;;;;;;;;;;;:::o;8706:262:14:-;8789:12;8804:9;:19;8814:8;8804:19;;;;;;;;;;;;;;;;;;;;;8789:34;;8829:24;8844:8;8829:14;:24::i;:::-;8860:30;8875:4;8881:8;8860:14;:30::i;:::-;8896:26;8908:3;8913:8;8896:11;:26::i;:::-;8954:8;8949:3;8934:29;;8943:4;8934:29;;;;;;;;;;;;8706:262;;;:::o;2460:207:12:-;2564:26;2576:3;2581:8;2564:11;:26::i;:::-;2596:6;2608:8;2596:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:1;2645:6;:13;;;;:17;;;;:::i;:::-;2623:9;:19;2633:8;2623:19;;;;;;;;;;;:39;;;;2460:207;;:::o;11989:569:14:-;12130:8;2226:18;2247:9;:19;2257:8;2247:19;;;;;;;;;;;;;;;;;;;;;2226:40;;2301:10;2287:24;;:10;:24;;;:70;;;;2347:10;2321:36;;:12;:22;2334:8;2321:22;;;;;;;;;;;;;;;;;;;;;:36;;;2287:70;:120;;;;2367:16;:28;2384:10;2367:28;;;;;;;;;;;;;;;:40;2396:10;2367:40;;;;;;;;;;;;;;;;;;;;;;;;;2287:120;2415:30;;;;;;;;;;;;;;;;;2272:179;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12157:8:::1;2675:1;2644:33;;:9;:19;2654:8;2644:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2679:13;;;;;;;;;;;;;;;;::::0;2636:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12175:18:::2;12196:9;:19;12206:8;12196:19;;;;;;;;;;;;;;;;;;;;;12175:40;;12243:5;12229:19;;:10;:19;;;12250:9;;;;;;;;;;;;;;;;::::0;12221:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12289:1;12274:17;;:3;:17;;;;12293:12;;;;;;;;;;;;;;;;::::0;12266:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12313:24;12323:3;12328:8;12313:9;:24::i;:::-;12348:16;:3;:14;;;:16::i;:::-;12344:210;;;12378:13;12414:3;12394:41;;;12436:10;12448:5;12455:8;12465:5;12394:77;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12378:93;;1110:10;12497:24;;12487:34;;;:6;:34;;;;12523:23;;;;;;;;;;;;;;;;::::0;12479:68:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12344:210;;2699:1;2457::::1;11989:569:::0;;;;;;:::o;3060:476:12:-;3147:21;3159:8;3147:11;:21::i;:::-;3175:18;3196:9;:19;3206:8;3196:19;;;;;;;;;;;;3175:40;;3221:22;3262:1;3246:6;:13;;;;:17;;;;:::i;:::-;3221:42;;3269:17;3289:6;3296:14;3289:22;;;;;;;;;;;;;;;;;;;;;;;;3269:42;;3339:9;3318:6;3325:10;3318:18;;;;;;;;;;;;;;;;;;;;;;;:30;;;;3355:6;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3492:10;3469:9;:20;3479:9;3469:20;;;;;;;;;;;:33;;;;3530:1;3508:9;:19;3518:8;3508:19;;;;;;;;;;;:23;;;;3060:476;;;;:::o;5241:165::-;5352:7;5376:10;:18;5387:6;5376:18;;;;;;;;;;;;;;;:25;;;;5369:32;;5241:165;;;:::o;12685:104:14:-;12762:12;:22;12775:8;12762:22;;;;;;;;;;;;12755:29;;;;;;;;;;;12685:104;:::o;3807:580:12:-;3953:5;3930:28;;:9;:19;3940:8;3930:19;;;;;;;;;;;;;;;;;;;;;:28;;;3960:9;;;;;;;;;;;;;;;;;3922:48;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3983:9;:19;3993:8;3983:19;;;;;;;;;;;;3976:26;;;;;;;;;;;4009;4038:14;:24;4053:8;4038:24;;;;;;;;;;;;4009:53;;4068:22;4120:1;4093:10;:17;4104:5;4093:17;;;;;;;;;;;;;;;:24;;;;:28;;;;:::i;:::-;4068:53;;4150:18;4132:14;:36;4128:225;;4182:17;4202:10;:17;4213:5;4202:17;;;;;;;;;;;;;;;4220:14;4202:33;;;;;;;;;;;;;;;;;;;;;;;;4182:53;;4283:9;4243:10;:17;4254:5;4243:17;;;;;;;;;;;;;;;4261:18;4243:37;;;;;;;;;;;;;;;;;;;;;;;:49;;;;4328:18;4300:14;:25;4315:9;4300:25;;;;;;;;;;;:46;;;;4128:225;;4359:10;:17;4370:5;4359:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3807:580;;;;:::o;4650:304::-;4799:1;4768:33;;:9;:19;4778:8;4768:19;;;;;;;;;;;;;;;;;;;;;:33;;;4803:18;;;;;;;;;;;;;;;;;4760:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4850:3;4828:9;:19;4838:8;4828:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;4860:10;:15;4871:3;4860:15;;;;;;;;;;;;;;;4881:8;4860:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4948:1;4923:10;:15;4934:3;4923:15;;;;;;;;;;;;;;;:22;;;;:26;;;;:::i;:::-;4896:14;:24;4911:8;4896:24;;;;;;;;;;;:53;;;;4650:304;;:::o;9349:284:14:-;9463:1;9448:17;;:3;:17;;;;9467:12;;;;;;;;;;;;;;;;;9440:40;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;9525:1;9494:33;;:9;:19;9504:8;9494:19;;;;;;;;;;;;;;;;;;;;;:33;;;9529:18;;;;;;;;;;;;;;;;;9486:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;9555:26;9567:3;9572:8;9555:11;:26::i;:::-;9619:8;9614:3;9593:35;;9610:1;9593:35;;;;;;;;;;;;9349:284;;:::o;466:762:15:-;544:17;976:16;998:19;1020:66;998:88;;;;1127:5;1115:18;1103:30;;1192:3;1180:15;;:8;:15;;:42;;;;;1211:11;1199:8;:23;;1180:42;1164:59;;466:762;;;;;:::o;10026:271:14:-;10109:8;2675:1;2644:33;;:9;:19;2654:8;2644:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2679:13;;;;;;;;;;;;;;;;;2636:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10127:18:::1;10148:9;:19;10158:8;10148:19;;;;;;;;;;;;;;;;;;;;;10127:40;;10173:24;10188:8;10173:14;:24::i;:::-;10203:36;10218:10;10230:8;10203:14;:36::i;:::-;10283:8;10279:1;10250:42;;10259:10;10250:42;;;;;;;;;;;;2699:1;10026:271:::0;;:::o;7:139:35:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;;374:6;361:20;352:29;;390:32;416:5;390:32;:::i;:::-;342:86;;;;:::o;434:141::-;;521:6;515:13;506:22;;537:32;563:5;537:32;:::i;:::-;496:79;;;;:::o;594:351::-;;;711:3;704:4;696:6;692:17;688:27;678:2;;729:1;726;719:12;678:2;765:6;752:20;742:30;;795:18;787:6;784:30;781:2;;;827:1;824;817:12;781:2;864:4;856:6;852:17;840:29;;918:3;910:4;902:6;898:17;888:8;884:32;881:41;878:2;;;935:1;932;925:12;878:2;668:277;;;;;:::o;951:139::-;;1035:6;1022:20;1013:29;;1051:33;1078:5;1051:33;:::i;:::-;1003:87;;;;:::o;1096:262::-;;1204:2;1192:9;1183:7;1179:23;1175:32;1172:2;;;1220:1;1217;1210:12;1172:2;1263:1;1288:53;1333:7;1324:6;1313:9;1309:22;1288:53;:::i;:::-;1278:63;;1234:117;1162:196;;;;:::o;1364:407::-;;;1489:2;1477:9;1468:7;1464:23;1460:32;1457:2;;;1505:1;1502;1495:12;1457:2;1548:1;1573:53;1618:7;1609:6;1598:9;1594:22;1573:53;:::i;:::-;1563:63;;1519:117;1675:2;1701:53;1746:7;1737:6;1726:9;1722:22;1701:53;:::i;:::-;1691:63;;1646:118;1447:324;;;;;:::o;1777:552::-;;;;1919:2;1907:9;1898:7;1894:23;1890:32;1887:2;;;1935:1;1932;1925:12;1887:2;1978:1;2003:53;2048:7;2039:6;2028:9;2024:22;2003:53;:::i;:::-;1993:63;;1949:117;2105:2;2131:53;2176:7;2167:6;2156:9;2152:22;2131:53;:::i;:::-;2121:63;;2076:118;2233:2;2259:53;2304:7;2295:6;2284:9;2280:22;2259:53;:::i;:::-;2249:63;;2204:118;1877:452;;;;;:::o;2335:829::-;;;;;;2513:3;2501:9;2492:7;2488:23;2484:33;2481:2;;;2530:1;2527;2520:12;2481:2;2573:1;2598:53;2643:7;2634:6;2623:9;2619:22;2598:53;:::i;:::-;2588:63;;2544:117;2700:2;2726:53;2771:7;2762:6;2751:9;2747:22;2726:53;:::i;:::-;2716:63;;2671:118;2828:2;2854:53;2899:7;2890:6;2879:9;2875:22;2854:53;:::i;:::-;2844:63;;2799:118;2984:2;2973:9;2969:18;2956:32;3015:18;3007:6;3004:30;3001:2;;;3047:1;3044;3037:12;3001:2;3083:64;3139:7;3130:6;3119:9;3115:22;3083:64;:::i;:::-;3065:82;;;;2927:230;2471:693;;;;;;;;:::o;3170:401::-;;;3292:2;3280:9;3271:7;3267:23;3263:32;3260:2;;;3308:1;3305;3298:12;3260:2;3351:1;3376:53;3421:7;3412:6;3401:9;3397:22;3376:53;:::i;:::-;3366:63;;3322:117;3478:2;3504:50;3546:7;3537:6;3526:9;3522:22;3504:50;:::i;:::-;3494:60;;3449:115;3250:321;;;;;:::o;3577:407::-;;;3702:2;3690:9;3681:7;3677:23;3673:32;3670:2;;;3718:1;3715;3708:12;3670:2;3761:1;3786:53;3831:7;3822:6;3811:9;3807:22;3786:53;:::i;:::-;3776:63;;3732:117;3888:2;3914:53;3959:7;3950:6;3939:9;3935:22;3914:53;:::i;:::-;3904:63;;3859:118;3660:324;;;;;:::o;3990:260::-;;4097:2;4085:9;4076:7;4072:23;4068:32;4065:2;;;4113:1;4110;4103:12;4065:2;4156:1;4181:52;4225:7;4216:6;4205:9;4201:22;4181:52;:::i;:::-;4171:62;;4127:116;4055:195;;;;:::o;4256:282::-;;4374:2;4362:9;4353:7;4349:23;4345:32;4342:2;;;4390:1;4387;4380:12;4342:2;4433:1;4458:63;4513:7;4504:6;4493:9;4489:22;4458:63;:::i;:::-;4448:73;;4404:127;4332:206;;;;:::o;4544:262::-;;4652:2;4640:9;4631:7;4627:23;4623:32;4620:2;;;4668:1;4665;4658:12;4620:2;4711:1;4736:53;4781:7;4772:6;4761:9;4757:22;4736:53;:::i;:::-;4726:63;;4682:117;4610:196;;;;:::o;4812:118::-;4899:24;4917:5;4899:24;:::i;:::-;4894:3;4887:37;4877:53;;:::o;4936:109::-;5017:21;5032:5;5017:21;:::i;:::-;5012:3;5005:34;4995:50;;:::o;5051:360::-;;5165:38;5197:5;5165:38;:::i;:::-;5219:70;5282:6;5277:3;5219:70;:::i;:::-;5212:77;;5298:52;5343:6;5338:3;5331:4;5324:5;5320:16;5298:52;:::i;:::-;5375:29;5397:6;5375:29;:::i;:::-;5370:3;5366:39;5359:46;;5141:270;;;;;:::o;5417:364::-;;5533:39;5566:5;5533:39;:::i;:::-;5588:71;5652:6;5647:3;5588:71;:::i;:::-;5581:78;;5668:52;5713:6;5708:3;5701:4;5694:5;5690:16;5668:52;:::i;:::-;5745:29;5767:6;5745:29;:::i;:::-;5740:3;5736:39;5729:46;;5509:272;;;;;:::o;5787:118::-;5874:24;5892:5;5874:24;:::i;:::-;5869:3;5862:37;5852:53;;:::o;5911:222::-;;6042:2;6031:9;6027:18;6019:26;;6055:71;6123:1;6112:9;6108:17;6099:6;6055:71;:::i;:::-;6009:124;;;;:::o;6139:640::-;;6372:3;6361:9;6357:19;6349:27;;6386:71;6454:1;6443:9;6439:17;6430:6;6386:71;:::i;:::-;6467:72;6535:2;6524:9;6520:18;6511:6;6467:72;:::i;:::-;6549;6617:2;6606:9;6602:18;6593:6;6549:72;:::i;:::-;6668:9;6662:4;6658:20;6653:2;6642:9;6638:18;6631:48;6696:76;6767:4;6758:6;6696:76;:::i;:::-;6688:84;;6339:440;;;;;;;:::o;6785:210::-;;6910:2;6899:9;6895:18;6887:26;;6923:65;6985:1;6974:9;6970:17;6961:6;6923:65;:::i;:::-;6877:118;;;;:::o;7001:313::-;;7152:2;7141:9;7137:18;7129:26;;7201:9;7195:4;7191:20;7187:1;7176:9;7172:17;7165:47;7229:78;7302:4;7293:6;7229:78;:::i;:::-;7221:86;;7119:195;;;;:::o;7320:222::-;;7451:2;7440:9;7436:18;7428:26;;7464:71;7532:1;7521:9;7517:17;7508:6;7464:71;:::i;:::-;7418:124;;;;:::o;7548:98::-;;7633:5;7627:12;7617:22;;7606:40;;;:::o;7652:99::-;;7738:5;7732:12;7722:22;;7711:40;;;:::o;7757:168::-;;7874:6;7869:3;7862:19;7914:4;7909:3;7905:14;7890:29;;7852:73;;;;:::o;7931:169::-;;8049:6;8044:3;8037:19;8089:4;8084:3;8080:14;8065:29;;8027:73;;;;:::o;8106:191::-;;8166:20;8184:1;8166:20;:::i;:::-;8161:25;;8200:20;8218:1;8200:20;:::i;:::-;8195:25;;8239:1;8236;8233:8;8230:2;;;8244:18;;:::i;:::-;8230:2;8289:1;8286;8282:9;8274:17;;8151:146;;;;:::o;8303:96::-;;8369:24;8387:5;8369:24;:::i;:::-;8358:35;;8348:51;;;:::o;8405:90::-;;8482:5;8475:13;8468:21;8457:32;;8447:48;;;:::o;8501:149::-;;8577:66;8570:5;8566:78;8555:89;;8545:105;;;:::o;8656:126::-;;8733:42;8726:5;8722:54;8711:65;;8701:81;;;:::o;8788:77::-;;8854:5;8843:16;;8833:32;;;:::o;8871:307::-;8939:1;8949:113;8963:6;8960:1;8957:13;8949:113;;;9048:1;9043:3;9039:11;9033:18;9029:1;9024:3;9020:11;9013:39;8985:2;8982:1;8978:10;8973:15;;8949:113;;;9080:6;9077:1;9074:13;9071:2;;;9160:1;9151:6;9146:3;9142:16;9135:27;9071:2;8920:258;;;;:::o;9184:180::-;9232:77;9229:1;9222:88;9329:4;9326:1;9319:15;9353:4;9350:1;9343:15;9370:102;;9462:2;9458:7;9453:2;9446:5;9442:14;9438:28;9428:38;;9418:54;;;:::o;9478:122::-;9551:24;9569:5;9551:24;:::i;:::-;9544:5;9541:35;9531:2;;9590:1;9587;9580:12;9531:2;9521:79;:::o;9606:116::-;9676:21;9691:5;9676:21;:::i;:::-;9669:5;9666:32;9656:2;;9712:1;9709;9702:12;9656:2;9646:76;:::o;9728:120::-;9800:23;9817:5;9800:23;:::i;:::-;9793:5;9790:34;9780:2;;9838:1;9835;9828:12;9780:2;9770:78;:::o;9854:122::-;9927:24;9945:5;9927:24;:::i;:::-;9920:5;9917:35;9907:2;;9966:1;9963;9956:12;9907:2;9897:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\n\nimport \"../../contracts/tokens/nf-token-enumerable.sol\";\nimport \"../ownership/ownable.sol\";\n\n/**\n * @dev This is an example contract implementation of NFToken with enumerable extension.\n */\ncontract NFTokenEnumerableMock is\n  NFTokenEnumerable,\n  Ownable\n{\n\n  /**\n   * @dev Mints a new NFT.\n   * @param _to The address that will own the minted NFT.\n   * @param _tokenId of the NFT to be minted by the msg.sender.\n   */\n  function mint(\n    address _to,\n    uint256 _tokenId\n  )\n    external\n    onlyOwner\n  {\n    super._mint(_to, _tokenId);\n  }\n\n  /**\n   * @dev Removes a NFT from owner.\n   * @param _tokenId Which NFT we want to remove.\n   */\n  function burn(\n    uint256 _tokenId\n  )\n    external\n    onlyOwner\n  {\n    super._burn(_tokenId);\n  }\n\n}\n",
  "sourcePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/mocks/nf-token-enumerable-mock.sol",
  "ast": {
    "absolutePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/mocks/nf-token-enumerable-mock.sol",
    "exportedSymbols": {
      "AddressUtils": [
        2278
      ],
      "ERC165": [
        2290
      ],
      "ERC721": [
        1139
      ],
      "ERC721Enumerable": [
        984
      ],
      "ERC721TokenReceiver": [
        1026
      ],
      "NFToken": [
        2246
      ],
      "NFTokenEnumerable": [
        1466
      ],
      "NFTokenEnumerableMock": [
        609
      ],
      "Ownable": [
        956
      ],
      "SupportsInterface": [
        2327
      ]
    },
    "id": 610,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 568,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:3"
      },
      {
        "absolutePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/tokens/nf-token-enumerable.sol",
        "file": "../../contracts/tokens/nf-token-enumerable.sol",
        "id": 569,
        "nodeType": "ImportDirective",
        "scope": 610,
        "sourceUnit": 1467,
        "src": "56:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/ownership/ownable.sol",
        "file": "../ownership/ownable.sol",
        "id": 570,
        "nodeType": "ImportDirective",
        "scope": 610,
        "sourceUnit": 957,
        "src": "113:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 572,
              "name": "NFTokenEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1466,
              "src": "282:17:3"
            },
            "id": 573,
            "nodeType": "InheritanceSpecifier",
            "src": "282:17:3"
          },
          {
            "baseName": {
              "id": 574,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 956,
              "src": "303:7:3"
            },
            "id": 575,
            "nodeType": "InheritanceSpecifier",
            "src": "303:7:3"
          }
        ],
        "contractDependencies": [
          956,
          984,
          1139,
          1466,
          2246,
          2290,
          2327
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 571,
          "nodeType": "StructuredDocumentation",
          "src": "149:96:3",
          "text": " @dev This is an example contract implementation of NFToken with enumerable extension."
        },
        "fullyImplemented": true,
        "id": 609,
        "linearizedBaseContracts": [
          609,
          956,
          1466,
          984,
          2246,
          2327,
          2290,
          1139
        ],
        "name": "NFTokenEnumerableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 592,
              "nodeType": "Block",
              "src": "563:37:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 588,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "581:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 589,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "586:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 585,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "569:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenEnumerableMock_$609_$",
                          "typeString": "type(contract super NFTokenEnumerableMock)"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1276,
                      "src": "569:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "569:26:3"
                }
              ]
            },
            "documentation": {
              "id": 576,
              "nodeType": "StructuredDocumentation",
              "src": "316:158:3",
              "text": " @dev Mints a new NFT.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender."
            },
            "functionSelector": "40c10f19",
            "id": 593,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 583,
                "modifierName": {
                  "id": 582,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 927,
                  "src": "551:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "551:9:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "496:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "513:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:43:3"
            },
            "returnParameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:3"
            },
            "scope": 609,
            "src": "477:123:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 607,
              "nodeType": "Block",
              "src": "771:32:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 604,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "789:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 601,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "777:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenEnumerableMock_$609_$",
                          "typeString": "type(contract super NFTokenEnumerableMock)"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1332,
                      "src": "777:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "777:21:3"
                }
              ]
            },
            "documentation": {
              "id": 594,
              "nodeType": "StructuredDocumentation",
              "src": "604:95:3",
              "text": " @dev Removes a NFT from owner.\n @param _tokenId Which NFT we want to remove."
            },
            "functionSelector": "42966c68",
            "id": 608,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 599,
                "modifierName": {
                  "id": 598,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 927,
                  "src": "759:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "759:9:3"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "721:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "715:26:3"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:3"
            },
            "scope": 609,
            "src": "702:101:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 610,
        "src": "246:560:3"
      }
    ],
    "src": "32:775:3"
  },
  "legacyAST": {
    "absolutePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/mocks/nf-token-enumerable-mock.sol",
    "exportedSymbols": {
      "AddressUtils": [
        2278
      ],
      "ERC165": [
        2290
      ],
      "ERC721": [
        1139
      ],
      "ERC721Enumerable": [
        984
      ],
      "ERC721TokenReceiver": [
        1026
      ],
      "NFToken": [
        2246
      ],
      "NFTokenEnumerable": [
        1466
      ],
      "NFTokenEnumerableMock": [
        609
      ],
      "Ownable": [
        956
      ],
      "SupportsInterface": [
        2327
      ]
    },
    "id": 610,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 568,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:3"
      },
      {
        "absolutePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/tokens/nf-token-enumerable.sol",
        "file": "../../contracts/tokens/nf-token-enumerable.sol",
        "id": 569,
        "nodeType": "ImportDirective",
        "scope": 610,
        "sourceUnit": 1467,
        "src": "56:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/madhavan/work/TopCommits/contract/contracts/ethereum-erc721/src/contracts/ownership/ownable.sol",
        "file": "../ownership/ownable.sol",
        "id": 570,
        "nodeType": "ImportDirective",
        "scope": 610,
        "sourceUnit": 957,
        "src": "113:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 572,
              "name": "NFTokenEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1466,
              "src": "282:17:3"
            },
            "id": 573,
            "nodeType": "InheritanceSpecifier",
            "src": "282:17:3"
          },
          {
            "baseName": {
              "id": 574,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 956,
              "src": "303:7:3"
            },
            "id": 575,
            "nodeType": "InheritanceSpecifier",
            "src": "303:7:3"
          }
        ],
        "contractDependencies": [
          956,
          984,
          1139,
          1466,
          2246,
          2290,
          2327
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 571,
          "nodeType": "StructuredDocumentation",
          "src": "149:96:3",
          "text": " @dev This is an example contract implementation of NFToken with enumerable extension."
        },
        "fullyImplemented": true,
        "id": 609,
        "linearizedBaseContracts": [
          609,
          956,
          1466,
          984,
          2246,
          2327,
          2290,
          1139
        ],
        "name": "NFTokenEnumerableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 592,
              "nodeType": "Block",
              "src": "563:37:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 588,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "581:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 589,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "586:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 585,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "569:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenEnumerableMock_$609_$",
                          "typeString": "type(contract super NFTokenEnumerableMock)"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1276,
                      "src": "569:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "569:26:3"
                }
              ]
            },
            "documentation": {
              "id": 576,
              "nodeType": "StructuredDocumentation",
              "src": "316:158:3",
              "text": " @dev Mints a new NFT.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender."
            },
            "functionSelector": "40c10f19",
            "id": 593,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 583,
                "modifierName": {
                  "id": 582,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 927,
                  "src": "551:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "551:9:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "496:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "513:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:43:3"
            },
            "returnParameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:3"
            },
            "scope": 609,
            "src": "477:123:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 607,
              "nodeType": "Block",
              "src": "771:32:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 604,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "789:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 601,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "777:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenEnumerableMock_$609_$",
                          "typeString": "type(contract super NFTokenEnumerableMock)"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1332,
                      "src": "777:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "777:21:3"
                }
              ]
            },
            "documentation": {
              "id": 594,
              "nodeType": "StructuredDocumentation",
              "src": "604:95:3",
              "text": " @dev Removes a NFT from owner.\n @param _tokenId Which NFT we want to remove."
            },
            "functionSelector": "42966c68",
            "id": 608,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 599,
                "modifierName": {
                  "id": 598,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 927,
                  "src": "759:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "759:9:3"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "721:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "715:26:3"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:3"
            },
            "scope": 609,
            "src": "702:101:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 610,
        "src": "246:560:3"
      }
    ],
    "src": "32:775:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-21T23:26:12.877Z",
  "devdoc": {
    "details": "This is an example contract implementation of NFToken with enumerable extension.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "returns": {
          "_0": "Balance of _owner."
        }
      },
      "burn(uint256)": {
        "details": "Removes a NFT from owner.",
        "params": {
          "_tokenId": "Which NFT we want to remove."
        }
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "returns": {
          "_0": "Address that _tokenId is approved for."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "returns": {
          "_0": "True if approved for all, false otherwise."
        }
      },
      "mint(address,uint256)": {
        "details": "Mints a new NFT.",
        "params": {
          "_to": "The address that will own the minted NFT.",
          "_tokenId": "of the NFT to be minted by the msg.sender."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "returns": {
          "_owner": "Address of _tokenId owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Returns NFT ID by its index.",
        "params": {
          "_index": "A counter less than `totalSupply()`."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "returns the n-th NFT ID from a list of owner's tokens.",
        "params": {
          "_index": "Index number representing n-th token in owner's list of tokens.",
          "_owner": "Token owner's address."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "totalSupply()": {
        "details": "Returns the count of all existing NFTokens.",
        "returns": {
          "_0": "Total supply of NFTs."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost."
      }
    },
    "version": 1
  }
}