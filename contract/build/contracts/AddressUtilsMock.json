{
  "contractName": "AddressUtilsMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "isContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "addressCheck",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"addressCheck\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/madhavan/work/topcommits/contract/contracts/ethereum-erc721/src/tests/mocks/address-utils-mock.sol\":\"AddressUtilsMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/madhavan/work/topcommits/contract/contracts/ethereum-erc721/src/contracts/utils/address-utils.sol\":{\"keccak256\":\"0xd5cf8ac87ee4ebebff4e7d6f1b2bf2416016f03151dd47057e40196213cc747b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e0608cf74cec01d15df48a321b425139fc5bdec9d5a178885b4f00ca33df2c5\",\"dweb:/ipfs/QmSiobwuQdewdEzMvLp2XZp4uG5wtsM4m29j1zHWc4QJuU\"]},\"/home/madhavan/work/topcommits/contract/contracts/ethereum-erc721/src/tests/mocks/address-utils-mock.sol\":{\"keccak256\":\"0x31b9d37429b5646a12800a37521d4ee81953066435b8ebfeb40ecad951b747f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab0c9229f3441e003bcbb6aa9474faafe48f189c5f64b99540a968f9d09be916\",\"dweb:/ipfs/QmapjSac43eDmuhhNYxgbFdgYygkrmnwHJqRAFqgof6Lp1\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101c6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631627905514610030575b600080fd5b61004a600480360381019061004591906100e8565b610060565b6040516100579190610120565b60405180910390f35b60006100818273ffffffffffffffffffffffffffffffffffffffff16610088565b9050919050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156100ca5750808214155b92505050919050565b6000813590506100e281610179565b92915050565b6000602082840312156100fa57600080fd5b6000610108848285016100d3565b91505092915050565b61011a8161014d565b82525050565b60006020820190506101356000830184610111565b92915050565b600061014682610159565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101828161013b565b811461018d57600080fd5b5056fea2646970667358221220e57032a96f857ee14e4b446b58e38c702d54ea80def61533b0b5de6294934d8964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80631627905514610030575b600080fd5b61004a600480360381019061004591906100e8565b610060565b6040516100579190610120565b60405180910390f35b60006100818273ffffffffffffffffffffffffffffffffffffffff16610088565b9050919050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156100ca5750808214155b92505050919050565b6000813590506100e281610179565b92915050565b6000602082840312156100fa57600080fd5b6000610108848285016100d3565b91505092915050565b61011a8161014d565b82525050565b60006020820190506101356000830184610111565b92915050565b600061014682610159565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101828161013b565b811461018d57600080fd5b5056fea2646970667358221220e57032a96f857ee14e4b446b58e38c702d54ea80def61533b0b5de6294934d8964736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1206:26",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:26"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:26"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:26",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:26",
                "type": ""
              }
            ],
            "src": "7:139:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:26"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:26",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:26",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:26",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:26",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:26",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:26"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:26"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:26"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:26"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:26"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:26"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:26",
                "type": ""
              }
            ],
            "src": "152:262:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "479:50:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "496:3:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "516:5:26"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "501:14:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:21:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "489:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "489:34:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "489:34:26"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "467:5:26",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "474:3:26",
                "type": ""
              }
            ],
            "src": "420:109:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "627:118:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "637:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "649:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "660:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "645:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "637:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "711:6:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "724:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "735:1:26",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "720:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "720:17:26"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "673:37:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "673:65:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "673:65:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "599:9:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "611:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "622:4:26",
                "type": ""
              }
            ],
            "src": "535:210:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "796:51:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "806:35:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "835:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "817:17:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:24:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "806:7:26"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "778:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "788:7:26",
                "type": ""
              }
            ],
            "src": "751:96:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "895:48:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "905:32:26",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "930:5:26"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "923:6:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:13:26"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "916:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "916:21:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "905:7:26"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "877:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "887:7:26",
                "type": ""
              }
            ],
            "src": "853:90:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "994:81:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1004:65:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1019:5:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1026:42:26",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1015:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1015:54:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1004:7:26"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "976:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "986:7:26",
                "type": ""
              }
            ],
            "src": "949:126:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1124:79:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1181:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1190:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1193:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1183:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1183:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1183:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1147:5:26"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1172:5:26"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1154:17:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1154:24:26"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1144:2:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1144:35:26"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1137:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1137:43:26"
                  },
                  "nodeType": "YulIf",
                  "src": "1134:2:26"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1117:5:26",
                "type": ""
              }
            ],
            "src": "1081:122:26"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 26,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "107:210:18:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "107:210:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;172:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;250:17;292:18;:5;:16;;;:18::i;:::-;277:33;;172:143;;;:::o;466:762:15:-;544:17;976:16;998:19;1020:66;998:88;;;;1127:5;1115:18;1103:30;;1192:3;1180:15;;:8;:15;;:42;;;;;1211:11;1199:8;:23;;1180:42;1164:59;;466:762;;;;;:::o;7:139:26:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:109::-;501:21;516:5;501:21;:::i;:::-;496:3;489:34;479:50;;:::o;535:210::-;;660:2;649:9;645:18;637:26;;673:65;735:1;724:9;720:17;711:6;673:65;:::i;:::-;627:118;;;;:::o;751:96::-;;817:24;835:5;817:24;:::i;:::-;806:35;;796:51;;;:::o;853:90::-;;930:5;923:13;916:21;905:32;;895:48;;;:::o;949:126::-;;1026:42;1019:5;1015:54;1004:65;;994:81;;;:::o;1081:122::-;1154:24;1172:5;1154:24;:::i;:::-;1147:5;1144:35;1134:2;;1193:1;1190;1183:12;1134:2;1124:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\n\nimport \"../../contracts/utils/address-utils.sol\";\n\ncontract AddressUtilsMock {\n  using AddressUtils for address;\n\n  function isContract(\n    address _addr\n  )\n    external\n    view\n    returns (bool addressCheck)\n  {\n    addressCheck = _addr.isContract();\n  }\n}\n",
  "sourcePath": "/home/madhavan/work/topcommits/contract/contracts/ethereum-erc721/src/tests/mocks/address-utils-mock.sol",
  "ast": {
    "absolutePath": "/home/madhavan/work/topcommits/contract/contracts/ethereum-erc721/src/tests/mocks/address-utils-mock.sol",
    "exportedSymbols": {
      "AddressUtils": [
        1717
      ],
      "AddressUtilsMock": [
        1787
      ]
    },
    "id": 1788,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1768,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:18"
      },
      {
        "absolutePath": "/home/madhavan/work/topcommits/contract/contracts/ethereum-erc721/src/contracts/utils/address-utils.sol",
        "file": "../../contracts/utils/address-utils.sol",
        "id": 1769,
        "nodeType": "ImportDirective",
        "scope": 1788,
        "sourceUnit": 1718,
        "src": "56:49:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1787,
        "linearizedBaseContracts": [
          1787
        ],
        "name": "AddressUtilsMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1772,
            "libraryName": {
              "id": 1770,
              "name": "AddressUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1717,
              "src": "143:12:18"
            },
            "nodeType": "UsingForDirective",
            "src": "137:31:18",
            "typeName": {
              "id": 1771,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "160:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "body": {
              "id": 1785,
              "nodeType": "Block",
              "src": "271:44:18",
              "statements": [
                {
                  "expression": {
                    "id": 1783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1779,
                      "name": "addressCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1777,
                      "src": "277:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1780,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "292:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1716,
                        "src": "292:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 1782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "292:18:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "277:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1784,
                  "nodeType": "ExpressionStatement",
                  "src": "277:33:18"
                }
              ]
            },
            "functionSelector": "16279055",
            "id": 1786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1774,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 1786,
                  "src": "197:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "197:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "191:23:18"
            },
            "returnParameters": {
              "id": 1778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1777,
                  "mutability": "mutable",
                  "name": "addressCheck",
                  "nodeType": "VariableDeclaration",
                  "scope": 1786,
                  "src": "250:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "249:19:18"
            },
            "scope": 1787,
            "src": "172:143:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1788,
        "src": "107:210:18"
      }
    ],
    "src": "32:286:18"
  },
  "legacyAST": {
    "absolutePath": "/home/madhavan/work/topcommits/contract/contracts/ethereum-erc721/src/tests/mocks/address-utils-mock.sol",
    "exportedSymbols": {
      "AddressUtils": [
        1717
      ],
      "AddressUtilsMock": [
        1787
      ]
    },
    "id": 1788,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1768,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:18"
      },
      {
        "absolutePath": "/home/madhavan/work/topcommits/contract/contracts/ethereum-erc721/src/contracts/utils/address-utils.sol",
        "file": "../../contracts/utils/address-utils.sol",
        "id": 1769,
        "nodeType": "ImportDirective",
        "scope": 1788,
        "sourceUnit": 1718,
        "src": "56:49:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1787,
        "linearizedBaseContracts": [
          1787
        ],
        "name": "AddressUtilsMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1772,
            "libraryName": {
              "id": 1770,
              "name": "AddressUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1717,
              "src": "143:12:18"
            },
            "nodeType": "UsingForDirective",
            "src": "137:31:18",
            "typeName": {
              "id": 1771,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "160:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "body": {
              "id": 1785,
              "nodeType": "Block",
              "src": "271:44:18",
              "statements": [
                {
                  "expression": {
                    "id": 1783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1779,
                      "name": "addressCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1777,
                      "src": "277:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1780,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "292:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1716,
                        "src": "292:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 1782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "292:18:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "277:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1784,
                  "nodeType": "ExpressionStatement",
                  "src": "277:33:18"
                }
              ]
            },
            "functionSelector": "16279055",
            "id": 1786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1774,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 1786,
                  "src": "197:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "197:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "191:23:18"
            },
            "returnParameters": {
              "id": 1778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1777,
                  "mutability": "mutable",
                  "name": "addressCheck",
                  "nodeType": "VariableDeclaration",
                  "scope": 1786,
                  "src": "250:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "249:19:18"
            },
            "scope": 1787,
            "src": "172:143:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1788,
        "src": "107:210:18"
      }
    ],
    "src": "32:286:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-18T14:37:20.078Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}